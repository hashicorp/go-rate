
name: ci

on:
  push:
    branches: [linting]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Determine Go version
        id: get-go-version
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "go-version=$(cat .go-version)" >> "$GITHUB_OUTPUT"
      - name: Setup Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: "${{ steps.get-go-version.outputs.go-version }}"
      - name: Checkout out code
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          fetch-depth: '0'
      - name: Determine go cache key
        id: go-cache-key
        run: |
            echo "key=${{ runner.os }}-go-${{ hashFiles('**/go.sum', './Makefile') }}" >> "$GITHUB_OUTPUT"
            echo "restore-key=${{ runner.os }}-go" >> "$GITHUB_OUTPUT"
      - name: Determine Go cache paths
        id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> "$GITHUB_OUTPUT"
          echo "go-mod=$(go env GOMODCACHE)" >> "$GITHUB_OUTPUT"
          echo "go-bin=$(go env GOPATH)/bin" >> "$GITHUB_OUTPUT"
      - name: Cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: |
            ${{ steps.go-cache-paths.outputs.go-mod }}
            ${{ steps.go-cache-paths.outputs.go-bin }}
            ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ steps.go-cache-key.outputs.key }}
          restore-keys: |
            ${{ steps.go-cache-key.outputs.restore-key }}
      - name: Install tools
        run: |
          go mod download
          make tools
      - name: Build
        run: |
          go build ./...
      - name: Test
        run: |
          make test
      - name: Bench
        run: |
          make bench
      - name: Lint
        run: |
          make lint
      - name: Gen diff
        run: |
          go mod tidy
          make gen
          git diff --exit-code
          git status --porcelain
          test -z "$(git status --porcelain)"
